"use strict";(self.webpackChunkjwtsmith_docs=self.webpackChunkjwtsmith_docs||[]).push([[6861],{8620:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"tutorial-middleware/introduction","title":"Introduction to Middleware in JWT Smith","description":"JWT Smith provides built-in middleware to simplify authentication and authorization in your application. These middleware functions help verify JWTs, extract user information, and enforce role-based access control (RBAC) seamlessly.","source":"@site/docs/tutorial-middleware/introduction.md","sourceDirName":"tutorial-middleware","slug":"/tutorial-middleware/introduction","permalink":"/docs/next/tutorial-middleware/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-middleware/introduction.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Tutorial - Middleware","permalink":"/docs/next/category/tutorial---middleware"},"next":{"title":"validateJwtCookieMiddleware","permalink":"/docs/next/tutorial-middleware/validate-jwt-cookie-middleware"}}');var r=t(4848),o=t(8453);const s={sidebar_position:1},a="Introduction to Middleware in JWT Smith",d={},l=[{value:"Available Middleware",id:"available-middleware",level:2}];function c(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"introduction-to-middleware-in-jwt-smith",children:"Introduction to Middleware in JWT Smith"})}),"\n",(0,r.jsx)(i.p,{children:"JWT Smith provides built-in middleware to simplify authentication and authorization in your application. These middleware functions help verify JWTs, extract user information, and enforce role-based access control (RBAC) seamlessly."}),"\n",(0,r.jsx)(i.h2,{id:"available-middleware",children:"Available Middleware"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"validateJwtCookieMiddleware"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Extracts and verifies access and refresh tokens from cookies."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"validateJwtHeaderMiddleware"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Checks for a JWT token in the Authorization header and verifies its validity."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"roleBasedAuthenticationMiddleware"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Ensures users have the necessary roles to access protected resources."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Each middleware function is designed to integrate effortlessly with Express applications while allowing customization through ",(0,r.jsx)(i.code,{children:"JwtManager"})," configurations."]}),"\n",(0,r.jsx)(i.p,{children:"In the following sections, we will dive into each middleware in detail, covering their usage, customization options, and best practices."})]})}function u(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>s,x:()=>a});var n=t(6540);const r={},o=n.createContext(r);function s(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:i},e.children)}}}]);