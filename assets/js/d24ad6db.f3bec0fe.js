"use strict";(self.webpackChunkjwtsmith_docs=self.webpackChunkjwtsmith_docs||[]).push([[72],{5442:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"tutorial-middleware/role-based-authentication-middleware","title":"roleBasedAuthenticationMiddleware","description":"The roleBasedAuthenticationMiddleware enforces role-based access control (RBAC) for API endpoints by verifying user roles and their associated permissions before granting access.","source":"@site/docs/tutorial-middleware/role-based-authentication-middleware.md","sourceDirName":"tutorial-middleware","slug":"/tutorial-middleware/role-based-authentication-middleware","permalink":"/docs/next/tutorial-middleware/role-based-authentication-middleware","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-middleware/role-based-authentication-middleware.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"validateJwtHeaderMiddleware","permalink":"/docs/next/tutorial-middleware/validate-jwt-header-middleware"}}');var r=s(4848),t=s(8453);const o={sidebar_position:3},a="roleBasedAuthenticationMiddleware",d={},l=[{value:"How It Works",id:"how-it-works",level:2},{value:"Middleware Parameters",id:"middleware-parameters",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Permissions Configuration File",id:"permissions-configuration-file",level:2},{value:"File Structure",id:"file-structure",level:3},{value:"Customization via JwtManager",id:"customization-via-jwtmanager",level:2}];function c(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rolebasedauthenticationmiddleware",children:"roleBasedAuthenticationMiddleware"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"roleBasedAuthenticationMiddleware"})," enforces role-based access control (RBAC) for API endpoints by verifying user roles and their associated permissions before granting access."]}),"\n",(0,r.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Extract ",(0,r.jsx)(n.code,{children:"user"})," object or ",(0,r.jsx)(n.code,{children:"role"})," property from the request object."]}),"\n",(0,r.jsx)(n.li,{children:"Checks if the user has the required role and action permissions."}),"\n",(0,r.jsxs)(n.li,{children:["Validates against a structured permissions configuration file (",(0,r.jsx)(n.code,{children:".auth-permissions.json"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Supports wildcard permissions (",(0,r.jsx)(n.code,{children:"*:*"}),") for full access control."]}),"\n",(0,r.jsxs)(n.li,{children:["If access is granted, the request proceeds; otherwise, a ",(0,r.jsx)(n.code,{children:"403 Forbidden"})," response is returned."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"middleware-parameters",children:"Middleware Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"requiredAction: string"})," ",(0,r.jsx)(n.em,{children:"(Required)"})," - The action the user is attempting (e.g., ",(0,r.jsx)(n.code,{children:"articles:post"}),", ",(0,r.jsx)(n.code,{children:"articles:list"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'app.get(\n  "/articles/some-endpoint",\n  validateJwtHeaderMiddleware, // Or validateJwtCookieMiddleware\n  roleBasedAuthenticationMiddleware("articles:list"),\n  (req, res) => {\n    res.send("You have access to this endpoint");\n  }\n);\n'})}),"\n",(0,r.jsx)(n.h2,{id:"permissions-configuration-file",children:"Permissions Configuration File"}),"\n",(0,r.jsx)(n.h3,{id:"file-structure",children:"File Structure"}),"\n",(0,r.jsx)(n.p,{children:"The permissions configuration file contains 3 main categories:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"endpoints"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"groups"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"common"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"The middleware reads the configurations in the above order."})}),"\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"activeVersions"})," property is present, the middleware will reject all non-mentioned API versions."]}),"\n",(0,r.jsxs)(n.p,{children:["The permissions file (",(0,r.jsx)(n.code,{children:".auth-permissions.json"}),") must be located at the root level and should define role-based access as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "versioned": true,\n  "activeVersions": ["v1"],\n  "endpoints": [\n    {\n      "path": "/login",\n      "methods": ["POST"],\n      "permissions": [\n        {\n          "roles": ["Admin", "Viewer", "Editor"],\n          "actions": ["auth:login"]\n        }\n      ]\n    },\n    {\n      "path": "/logout",\n      "methods": ["POST"],\n      "permissions": [\n        {\n          "roles": ["Admin", "Viewer", "Editor"],\n          "actions": ["auth:logout"]\n        }\n      ]\n    },\n    {\n      "path": "/users",\n      "methods": ["GET"],\n      "permissions": [\n        {\n          "roles": ["Admin", "Viewer", "Editor"],\n          "actions": ["user:list"]\n        }\n      ]\n    }\n  ],\n  "groups": {\n    "posts": {\n      "basePath": "/posts",\n      "permissions": [\n        {\n          "roles": ["Admin", "Editor"],\n          "actions": ["read:post", "write:post"]\n        },\n        {\n          "roles": ["Viewer"],\n          "actions": ["read:post"]\n        }\n      ],\n      "endpoints": [\n        {\n          "path": "/:id",\n          "methods": ["GET", "DELETE"],\n          "permissions": [\n            {\n              "roles": ["Admin"],\n              "actions": ["delete:post"]\n            }\n          ]\n        }\n      ]\n    },\n    "users": {\n      "basePath": "/v1/users",\n      "permissions": [\n        {\n          "roles": ["Admin"],\n          "actions": ["*:*"]\n        }\n      ],\n      "endpoints": [\n        {\n          "path": "/profile",\n          "methods": ["GET"],\n          "permissions": [\n            {\n              "roles": ["Admin", "Viewer"],\n              "actions": ["read:user"]\n            }\n          ]\n        },\n        {\n          "path": "/:id",\n          "methods": ["PATCH", "DELETE"],\n          "permissions": [\n            {\n              "roles": ["Admin"],\n              "actions": ["update:user", "delete:user"]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  "common": {\n    "roles": [\n      {\n        "name": "Admin",\n        "permissions": ["*:*"]\n      },\n      {\n        "name": "Editor",\n        "permissions": ["read:post", "write:post"]\n      },\n      {\n        "name": "Viewer",\n        "permissions": ["read:post"]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface PermissionsConfiguration {\n  versioned?: boolean;\n  activeVersions?: string[];\n  common: {\n    roles: RolesSet[];\n  };\n  groups: GroupedRoutesPermissionConfig;\n  endpoints: EndPointsPermissionConfig[];\n}\n\ninterface RolesSet {\n  name: string;\n  permissions: string[];\n}\n\ntype GroupedRoutesPermissionConfig = Record<string, EndPointConfig>;\n\ninterface EndPointConfig {\n  basePath: string;\n  permissions: PermissionsSet[];\n  endpoints: EndPointsPermissionConfig[];\n}\n\ninterface PermissionsSet {\n  roles: string[];\n  actions: string[];\n}\n\ninterface EndPointsPermissionConfig {\n  path: string;\n  methods: string[];\n  permissions: PermissionsSet[];\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"customization-via-jwtmanager",children:"Customization via JwtManager"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"extractApiVersion"})})," ",(0,r.jsx)(n.em,{children:"(Function, optional)"}),": Custom function to extract API version from the request."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'title="authTokenExtractor"',children:"interface (request: AuthedRequest) => Promise<string | undefined>;\n"})}),"\n",(0,r.jsx)(n.p,{children:"This middleware provides a structured approach to role-based authentication, ensuring secure access control for your application."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);